[{"C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\index.tsx":"1","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\application-page\\ApplicationPage.tsx":"2","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\store\\utils\\index.ts":"3","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\rsCloneServiceContext\\index.ts":"4","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\main-page\\MainPage.tsx":"5","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\application-page\\graph-overview\\GraphOverview.tsx":"6","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\application-page\\graph-overview\\Node.tsx":"7","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\navbar\\Navbar.tsx":"8","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\application-page\\shorcuts\\ShortcutList.tsx":"9","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\routes\\PrivateRoute.tsx":"10","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\note\\page\\Page.tsx":"11","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\services\\RSClone.service.ts":"12","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\application-page\\all-pages\\AllPages.tsx":"13","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\application-page\\all-pages\\all-pages-serviсe.tsx":"14","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\application-page\\all-pages\\alertDialog.tsx":"15","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\application-page\\all-pages\\menu.tsx":"16"},{"size":817,"mtime":1611332517199,"results":"17","hashOfConfig":"18"},{"size":1075,"mtime":1611332517176,"results":"19","hashOfConfig":"18"},{"size":1185,"mtime":1611485940803,"results":"20","hashOfConfig":"18"},{"size":100,"mtime":1611332517193,"results":"21","hashOfConfig":"18"},{"size":146,"mtime":1611332517190,"results":"22","hashOfConfig":"18"},{"size":1865,"mtime":1611485967650,"results":"23","hashOfConfig":"18"},{"size":1268,"mtime":1611485044136,"results":"24","hashOfConfig":"18"},{"size":1037,"mtime":1611304010337,"results":"25","hashOfConfig":"18"},{"size":224,"mtime":1611332517246,"results":"26","hashOfConfig":"18"},{"size":726,"mtime":1611332517192,"results":"27","hashOfConfig":"18"},{"size":7064,"mtime":1611390321711,"results":"28","hashOfConfig":"18"},{"size":5111,"mtime":1611564625866,"results":"29","hashOfConfig":"18"},{"size":6933,"mtime":1611591214995,"results":"30","hashOfConfig":"18"},{"size":3988,"mtime":1611494457784,"results":"31","hashOfConfig":"18"},{"size":3490,"mtime":1611593471348,"results":"32","hashOfConfig":"18"},{"size":2933,"mtime":1611591115663,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"2fo6ne",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\index.tsx",[],["71","72","73","74","75","76"],"C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\application-page\\ApplicationPage.tsx",[],"C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\store\\utils\\index.ts",[],"C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\rsCloneServiceContext\\index.ts",[],"C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\main-page\\MainPage.tsx",[],"C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\application-page\\graph-overview\\GraphOverview.tsx",[],["77","78","79","80","81","82"],"C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\application-page\\graph-overview\\Node.tsx",[],"C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\navbar\\Navbar.tsx",["83","84"],"import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport './navbar.scss';\nimport {\n  makeStyles, createStyles,\n} from '@material-ui/core/styles';\n\nimport TodayTwoToneIcon from '@material-ui/icons/TodayTwoTone';\nimport SearchInput from '../search-input/SearchInput';\n\nconst useStyles = makeStyles(() => createStyles({\n  calendar: {\n    padding: 0,\n  },\n}));\n\nconst onClickSetting = () => {\n  console.log('settings on!');\n};\n\nconst onClickCalendar = () => {\n  console.log('calendar on!');\n};\n\nconst Navbar = () => {\n  const classes = useStyles();\n\n  return (\n    <div className=\"header\">\n      <SearchInput />\n      <IconButton className={classes.calendar} onClick={onClickCalendar}>\n        <TodayTwoToneIcon className=\"header__calendar\" />\n      </IconButton>\n      <IconButton className={classes.calendar} onClick={onClickSetting}>\n        <MoreHorizIcon className=\"header__more\" />\n      </IconButton>\n    </div>\n  );\n};\n\nexport default Navbar;\n","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\application-page\\shorcuts\\ShortcutList.tsx",[],"C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\routes\\PrivateRoute.tsx",["85"],"import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst PrivateRoute = ({ component: Component, ...rest } : { component: React.FC, path: '/app' }) => {\n  const isLoggedIn = useSelector((state: any) => state.isLoggedIn);\n  console.log(`${isLoggedIn}dsadasww`);\n  return (\n    <Route\n        // eslint-disable-next-line react/jsx-props-no-spreading\n      {...rest}\n      render={(props: any) => (\n        isLoggedIn\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          ? <Component {...props} />\n          : <Redirect to={{ pathname: '/', state: { from: props.location } }} />\n      )}\n    />\n  );\n};\n\nexport default PrivateRoute;\n","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\note\\page\\Page.tsx",[],"C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\services\\RSClone.service.ts",["86"],"export interface NoteInfo {\n    id: number,\n    name: string\n}\n\nexport interface AddNoteRequest {\n    title: string,\n    body: object,\n    parents?: Array<NoteInfo>\n}\n\nexport interface UpdateNoteRequest {\n    title?: string,\n    body?: object,\n    parents?: Array<NoteInfo>\n}\n\nexport interface UpdateUserRequest {\n    email?: string,\n    name?: string,\n    password?: string\n}\n\nexport interface CreateUserRequest {\n    name: string,\n    password: string,\n    email: string,\n}\n\nexport interface LogInUserRequest {\n    password: string,\n    email: string,\n}\n\nexport type UserData = {\n    email: string,\n    username: string,\n}\n\nconst getAuthToken = (): string => {\n  const authToken = localStorage.getItem('auth-token');\n  if (!authToken) {\n    throw new Error('authToken is not defined or you are not authorized. Check localStorage');\n  }\n  return authToken;\n};\n\nexport default class RSCloneService {\n    getResource = async (url: string, options: object) => {\n      const response = await fetch(`${url}`, options);\n      if (!response.ok) {\n        throw new Error(`Could not fetch ${url}, received ${response.status}`);\n      }\n      if (!response.headers.get('content-type')) {\n        return {};\n      }\n      return response.json();\n    }\n\n    login = async (data: LogInUserRequest) => {\n      console.log('request');\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      };\n      const res = await this.getResource('/api/login', options);\n      localStorage.setItem('auth-token', res.token);\n      return res;\n    }\n\n    logout = async () => {\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getAuthToken()}`,\n        },\n      };\n      await this.getResource('/api/logout', options);\n      localStorage.removeItem('auth-token');\n      return true;\n    }\n\n    createUser = async (data: CreateUserRequest) => {\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      };\n      return this.getResource('/api/user', options);\n    }\n\n    deleteUser = async () => {\n      const options = {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${getAuthToken()}`,\n        },\n      };\n      await this.getResource('/api/user/me', options);\n      localStorage.removeItem('auth-token');\n      return true;\n    }\n\n    getUser = async (): Promise<UserData> => {\n      const options = {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${getAuthToken()}`,\n        },\n      };\n      const res = await this.getResource('/api/user/me', options);\n      return {\n        email: res.email,\n        username: res.name,\n      };\n    }\n\n    updateUser = async (data: UpdateUserRequest) => {\n      if (Object.keys(data).length === 0) {\n        throw new Error('At least one field is required');\n      }\n      const options = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getAuthToken()}`,\n        },\n        body: JSON.stringify(data),\n      };\n      return this.getResource('/api/user/me', options);\n    }\n\n    addNote = async (data: AddNoteRequest) => {\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getAuthToken()}`,\n        },\n        body: JSON.stringify(data),\n      };\n      const response = await this.getResource('/api/note', options);\n      // eslint-disable-next-line no-underscore-dangle\n      return response.DATA._id;\n    }\n\n    updateNote = async (data: UpdateNoteRequest, id: string) => {\n      const options = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getAuthToken()}`,\n        },\n        body: JSON.stringify(data),\n      };\n      return this.getResource(`/api/note/${id}`, options);\n    }\n\n    getNote = async (id: string) => {\n      const options = {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${getAuthToken()}`,\n        },\n      };\n      return this.getResource(`/api/note/${id}`, options);\n    }\n\n    deleteNote = async (id: string) => {\n      const options = {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${getAuthToken()}`,\n        },\n      };\n      return this.getResource(`/api/note/${id}`, options);\n    }\n\n    getNotes = async () => {\n      const options = {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${getAuthToken()}`,\n        },\n      };\n      return this.getResource('/api/notes', options);\n    }\n\n    getNoteByTitle = async (title: string) => {\n      const options = {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${getAuthToken()}`,\n        },\n      };\n      return this.getResource(`/api/note/title/${title}`, options);\n    }\n}\n","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\application-page\\all-pages\\AllPages.tsx",[],"C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\application-page\\all-pages\\all-pages-serviсe.tsx",[],"C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\application-page\\all-pages\\alertDialog.tsx",[],"C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\application-page\\all-pages\\menu.tsx",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"87","replacedBy":"99"},{"ruleId":"89","replacedBy":"100"},{"ruleId":"91","replacedBy":"101"},{"ruleId":"93","replacedBy":"102"},{"ruleId":"95","replacedBy":"103"},{"ruleId":"97","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":19,"column":3,"nodeType":"107","messageId":"108","endLine":19,"endColumn":14},{"ruleId":"105","severity":1,"message":"106","line":23,"column":3,"nodeType":"107","messageId":"108","endLine":23,"endColumn":14},{"ruleId":"105","severity":1,"message":"106","line":7,"column":3,"nodeType":"107","messageId":"108","endLine":7,"endColumn":14},{"ruleId":"105","severity":1,"message":"106","line":61,"column":7,"nodeType":"107","messageId":"108","endLine":61,"endColumn":18},"lines-around-directive",["109"],"no-spaced-func",["110"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["109"],["110"],[],[],[],[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements","func-call-spacing"]