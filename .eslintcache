[{"C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\index.tsx":"1","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\main\\Main.tsx":"2","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\all-pages\\AllPages.tsx":"3","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\graph-overview\\GraphOverview.tsx":"4","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\shorcuts\\ShortcutList.tsx":"5","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\sidebar\\Sidebar.tsx":"6","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\navbar\\Navbar.tsx":"7","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\all-pages\\menu.tsx":"8"},{"size":1762,"mtime":1610638965035,"results":"9","hashOfConfig":"10"},{"size":272,"mtime":1610638965019,"results":"11","hashOfConfig":"10"},{"size":2610,"mtime":1610640867372,"results":"12","hashOfConfig":"10"},{"size":247,"mtime":1610638965058,"results":"13","hashOfConfig":"10"},{"size":224,"mtime":1610638965029,"results":"14","hashOfConfig":"10"},{"size":5070,"mtime":1610638965033,"results":"15","hashOfConfig":"10"},{"size":1037,"mtime":1610638965020,"results":"16","hashOfConfig":"10"},{"size":2809,"mtime":1610640878106,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"u6xtua",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\index.tsx",[],["37","38","39","40","41","42"],"C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\main\\Main.tsx",[],"C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\all-pages\\AllPages.tsx",[],"C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\graph-overview\\GraphOverview.tsx",[],"C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\shorcuts\\ShortcutList.tsx",[],"C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\sidebar\\Sidebar.tsx",["43"],"import React, { useState } from 'react';\nimport {\n  makeStyles, Theme, createStyles,\n} from '@material-ui/core/styles';\nimport {\n  List, ListItem, ListItemText,\n  Drawer, ListItemIcon, Divider, fade, Link,\n} from '@material-ui/core';\nimport DateRange from '@material-ui/icons/DateRange';\nimport BubbleChart from '@material-ui/icons/BubbleChart';\nimport Grade from '@material-ui/icons/Grade';\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport './sidebar.scss';\nimport { Link as RouterLink } from 'react-router-dom';\nimport GraphNavigation from './GraphNavigation';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  link: {\n    color: '#5c7080',\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'none',\n    },\n  },\n  linkItem: {\n    '&:hover': {\n      backgroundColor: fade('#fff', 0.15),\n    },\n  },\n  divider: {\n    backgroundColor: fade('#fff', 0.15),\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#182026',\n  },\n  showButton: {\n    position: 'fixed',\n    padding: '4px',\n    width: '28px',\n    height: '28px',\n    top: '15px',\n    left: '15px',\n    cursor: 'pointer',\n    borderRadius: '10px',\n    '&:hover': {\n      backgroundColor: fade('#565555', 0.15),\n    },\n  },\n  hideButton: {\n    position: 'absolute',\n    padding: '4px',\n    width: '28px',\n    height: '28px',\n    top: '15px',\n    left: '195px',\n    borderRadius: '10px',\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: fade('#fff', 0.15),\n    },\n  },\n  listItemText: {\n    fontWeight: 600,\n  },\n  listIcon: {\n    minWidth: '44px',\n  },\n}));\n\nconst Sidebar = () => {\n  const [open, setOpen] = useState(true);\n\n  const classes = useStyles();\n\n  const toggleSidebar = (): void => {\n    setOpen(!open);\n  };\n\n  const onItemSelected = () => {\n    console.log(\"Yep, i'm selected\");\n  };\n\n  const drawer = (\n    <div>\n\n      <MenuOpenIcon className={classes.hideButton} htmlColor=\"#5c7080\" onClick={toggleSidebar} />\n      <GraphNavigation name=\"ALEKSEY\" />\n\n      <div className={classes.toolbar} />\n      <List className={classes.link}>\n        <Link component={RouterLink} to=\"/\" className={classes.link}>\n          <ListItem button onClick={onItemSelected} className={classes.linkItem}>\n            <ListItemIcon classes={{\n              root: classes.listIcon,\n            }}\n            >\n              <DateRange htmlColor=\"#5c7080\" />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"DAILY NOTES\"\n              classes={{\n                primary: classes.listItemText,\n              }}\n            />\n          </ListItem>\n        </Link>\n        <Link component={RouterLink} to=\"/graph\" className={classes.link}>\n          <ListItem button onClick={onItemSelected} className={classes.linkItem}>\n            <ListItemIcon classes={{\n              root: classes.listIcon,\n            }}\n            >\n              <BubbleChart htmlColor=\"#5c7080\" />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"GRAPH OVERVIEW\"\n              classes={{\n                primary: classes.listItemText,\n              }}\n            />\n          </ListItem>\n        </Link>\n        <Link component={RouterLink} to=\"/pages\" className={classes.link}>\n          <ListItem button onClick={onItemSelected} className={classes.linkItem}>\n            <ListItemIcon classes={{\n              root: classes.listIcon,\n            }}\n            >\n              <MenuIcon htmlColor=\"#5c7080\" />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"ALL PAGES\"\n              classes={{\n                primary: classes.listItemText,\n              }}\n            />\n          </ListItem>\n        </Link>\n        <Divider className={classes.divider} />\n        <Link component={RouterLink} to=\"/shortcut\" className={classes.link}>\n          <ListItem button onClick={onItemSelected} className={classes.linkItem}>\n            <ListItemIcon classes={{\n              root: classes.listIcon,\n            }}\n            >\n              <Grade htmlColor=\"#5c7080\" />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"SHORTCUTS\"\n              classes={{\n                primary: classes.listItemText,\n              }}\n            />\n          </ListItem>\n        </Link>\n      </List>\n    </div>\n  );\n\n  if (!open) {\n    return <MenuIcon onClick={toggleSidebar} htmlColor=\"#5c7080\" className={classes.showButton} />;\n  }\n  return (\n    <nav className={classes.drawer} aria-label=\"mailbox folders\">\n      <Drawer\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        variant=\"permanent\"\n        open\n      >\n        {drawer}\n      </Drawer>\n    </nav>\n  );\n};\n\nexport default Sidebar;\n","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\navbar\\Navbar.tsx",["44","45"],"import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport './navbar.scss';\nimport {\n  makeStyles, createStyles,\n} from '@material-ui/core/styles';\n\nimport TodayTwoToneIcon from '@material-ui/icons/TodayTwoTone';\nimport SearchInput from '../search-input/SearchInput';\n\nconst useStyles = makeStyles(() => createStyles({\n  calendar: {\n    padding: 0,\n  },\n}));\n\nconst onClickSetting = () => {\n  console.log('settings on!');\n};\n\nconst onClickCalendar = () => {\n  console.log('calendar on!');\n};\n\nconst Navbar = () => {\n  const classes = useStyles();\n\n  return (\n    <div className=\"header\">\n      <SearchInput />\n      <IconButton className={classes.calendar} onClick={onClickCalendar}>\n        <TodayTwoToneIcon className=\"header__calendar\" />\n      </IconButton>\n      <IconButton className={classes.calendar} onClick={onClickSetting}>\n        <MoreHorizIcon className=\"header__more\" />\n      </IconButton>\n    </div>\n  );\n};\n\nexport default Navbar;\n","C:\\Моя работа\\RS\\Сlone Front\\rsclone\\src\\components\\pages\\all-pages\\menu.tsx",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":97,"column":5,"nodeType":"60","messageId":"61","endLine":97,"endColumn":16},{"ruleId":"58","severity":1,"message":"59","line":19,"column":3,"nodeType":"60","messageId":"61","endLine":19,"endColumn":14},{"ruleId":"58","severity":1,"message":"59","line":23,"column":3,"nodeType":"60","messageId":"61","endLine":23,"endColumn":14},"lines-around-directive",["62"],"no-spaced-func",["63"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements","func-call-spacing"]