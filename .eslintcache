[{"C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\pages\\application-page\\graph-overview\\GraphOverview.tsx":"1","C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\sidebar\\Sidebar.tsx":"2","C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\sidebar\\GraphNavigation.tsx":"3","C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\index.tsx":"4","C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\store\\utils\\index.ts":"5","C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\pages\\application-page\\all-pages\\AllPages.tsx":"6","C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\pages\\main-page\\MainPage.tsx":"7","C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\services\\RSClone.service.ts":"8","C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\home\\LoginFrom.tsx":"9","C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\sidebar\\UserSettings.tsx":"10","C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\pages\\application-page\\shorcuts\\ShortcutList.tsx":"11","C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\pages\\application-page\\daily-notes\\DailyNotes.tsx":"12","C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\navbar\\Navbar.tsx":"13","C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\store\\actionsCreators\\actionsCreators.ts":"14","C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\sidebar\\ReDrawer.tsx":"15","C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\sidebar\\MenuItemWithModal.tsx":"16","C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\store\\reducers\\reducer.ts":"17"},{"size":1947,"mtime":1611223401752,"results":"18","hashOfConfig":"19"},{"size":2698,"mtime":1611494769005,"results":"20","hashOfConfig":"19"},{"size":3053,"mtime":1611516820962,"results":"21","hashOfConfig":"19"},{"size":1107,"mtime":1611493316000,"results":"22","hashOfConfig":"19"},{"size":1176,"mtime":1611068810323,"results":"23","hashOfConfig":"19"},{"size":5607,"mtime":1611242529458,"results":"24","hashOfConfig":"19"},{"size":146,"mtime":1610811197265,"results":"25","hashOfConfig":"19"},{"size":5621,"mtime":1611506172932,"results":"26","hashOfConfig":"19"},{"size":2111,"mtime":1611314143756,"results":"27","hashOfConfig":"19"},{"size":4735,"mtime":1611505904120,"results":"28","hashOfConfig":"19"},{"size":224,"mtime":1610379935388,"results":"29","hashOfConfig":"19"},{"size":2053,"mtime":1611079447101,"results":"30","hashOfConfig":"19"},{"size":1037,"mtime":1610547067810,"results":"31","hashOfConfig":"19"},{"size":8381,"mtime":1611516005198,"results":"32","hashOfConfig":"19"},{"size":4122,"mtime":1611513313700,"results":"33","hashOfConfig":"19"},{"size":1050,"mtime":1611429402541,"results":"34","hashOfConfig":"19"},{"size":992,"mtime":1611515511700,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1tjamb9",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\pages\\application-page\\graph-overview\\GraphOverview.tsx",[],["73","74","75","76","77","78"],"C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\sidebar\\Sidebar.tsx",["79","80"],"C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\sidebar\\GraphNavigation.tsx",[],"C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\index.tsx",["81"],"C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\store\\utils\\index.ts",["82","83","84"],"C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\pages\\application-page\\all-pages\\AllPages.tsx",[],"C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\pages\\main-page\\MainPage.tsx",[],"C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\services\\RSClone.service.ts",["85"],"export interface NoteInfo {\n    id: number,\n    name: string\n}\n\nexport interface AddNoteRequest {\n    title: string,\n    body: object,\n    parents?: Array<NoteInfo>\n}\n\nexport interface UpdateNoteRequest {\n    title?: string,\n    body?: object,\n    parents?: Array<NoteInfo>\n}\n\nexport interface UpdateUserRequest {\n    email?: string,\n    name?: string,\n    password?: string\n}\n\nexport interface CreateUserRequest {\n    name: string,\n    password: string,\n    email: string,\n}\n\nexport interface LogInUserRequest {\n    password: string,\n    email: string,\n}\n\nexport type UserData = {\n    email: string,\n    username: string,\n}\n\nexport type PasswordData = {\n    // eslint-disable-next-line camelcase\n    old_password: string,\n    // eslint-disable-next-line camelcase\n    new_password: string,\n}\n\nconst getAuthToken = (): string => {\n  const authToken = localStorage.getItem('auth-token');\n  if (!authToken) {\n    throw new Error('authToken is not defined or you are not authorized. Check localStorage');\n  }\n  return authToken;\n};\n\nexport default class RSCloneService {\n    getResource = async (url: string, options: object) => {\n      const response = await fetch(`${url}`, options);\n      if (!response.ok) {\n        throw new Error(`Could not fetch ${url}, received ${response.status}`);\n      }\n      if (!response.headers.get('content-type')) {\n        return {};\n      }\n      return response.json();\n    }\n\n    login = async (data: LogInUserRequest) => {\n      console.log('request');\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      };\n      const res = await this.getResource('/api/login', options);\n      localStorage.setItem('auth-token', res.token);\n      return res;\n    }\n\n    logout = async () => {\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getAuthToken()}`,\n        },\n      };\n      await this.getResource('api/logout', options);\n      localStorage.removeItem('auth-token');\n      return true;\n    }\n\n    createUser = async (data: CreateUserRequest) => {\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      };\n      return this.getResource('/api/user', options);\n    }\n\n    deleteUser = async () => {\n      const options = {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${getAuthToken()}`,\n        },\n      };\n      await this.getResource('api/user/me', options);\n      localStorage.removeItem('auth-token');\n      return true;\n    }\n\n    getUser = async (): Promise<UserData> => {\n      const options = {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${getAuthToken()}`,\n        },\n      };\n      const res = await this.getResource('/api/user/me', options);\n      return {\n        email: res.email,\n        username: res.name,\n      };\n    }\n\n    updateUser = async (data: UpdateUserRequest) => {\n      if (Object.keys(data).length === 0) {\n        throw new Error('At least one field is required');\n      }\n      const options = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getAuthToken()}`,\n        },\n        body: JSON.stringify(data),\n      };\n      return this.getResource('api/user/me', options);\n    }\n\n    addNote = async (data: AddNoteRequest) => {\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getAuthToken()}`,\n        },\n        body: JSON.stringify(data),\n      };\n      const response = await this.getResource('api/note', options);\n      // eslint-disable-next-line no-underscore-dangle\n      return response.DATA._id;\n    }\n\n    updateNote = async (data: UpdateNoteRequest, id: string) => {\n      const options = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getAuthToken()}`,\n        },\n        body: JSON.stringify(data),\n      };\n      return this.getResource(`api/note/${id}`, options);\n    }\n\n    getNote = async (id: string) => {\n      const options = {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${getAuthToken()}`,\n        },\n      };\n      return this.getResource(`api/note/${id}`, options);\n    }\n\n    deleteNote = async (id: string) => {\n      const options = {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${getAuthToken()}`,\n        },\n      };\n      return this.getResource(`api/note/${id}`, options);\n    }\n\n    getNotes = async () => {\n      const options = {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${getAuthToken()}`,\n        },\n      };\n      return this.getResource('/api/notes', options);\n    }\n\n    getNoteByTitle = async (title: string) => {\n      const options = {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${getAuthToken()}`,\n        },\n      };\n      return this.getResource(`api/note/title/${title}`, options);\n    }\n\n    userUpdatePassword = async (data: PasswordData) => {\n      const options = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getAuthToken()}`,\n        },\n        body: JSON.stringify(data),\n      };\n      return this.getResource('/api/user/me/password', options);\n    }\n}\n","C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\home\\LoginFrom.tsx",[],"C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\sidebar\\UserSettings.tsx",["86","87"],"C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\pages\\application-page\\shorcuts\\ShortcutList.tsx",[],"C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\pages\\application-page\\daily-notes\\DailyNotes.tsx",["88"],"C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\navbar\\Navbar.tsx",["89","90"],"C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\store\\actionsCreators\\actionsCreators.ts",["91","92"],"import { INote, IPage } from '../../models/notes.model';\nimport {\n  ADD_NOTE, CHANGE_FOCUS_ELEMENT,\n  UPDATE_NOTE_BODY, USER_LOGGED_IN, USER_LOGGED_OUT,\n} from '../actions/actions';\n// import { onUserLoggedInType } from '../../components/home/LoginFrom';\n\nexport type PagePath = (number | string);\n\nconst TEXT_INPUT_HEIGHT = 24;\n\nconst updateNestedPagesPath = (newRootPath: PagePath[], nestedPages: IPage[]): void => {\n  for (let i = 0; i < nestedPages.length; i += 1) {\n    const childOldPath: (string | number)[] = nestedPages[i].pagePath;\n    const childNewPath: (string | number)[] = [\n      ...newRootPath,\n      ...childOldPath.slice(-2),\n    ];\n    // eslint-disable-next-line no-param-reassign\n    nestedPages[i].pagePath = childNewPath;\n    if (nestedPages[i].nestedPages.length > 0) {\n      // eslint-disable-next-line no-unused-vars\n      updateNestedPagesPath(childNewPath, nestedPages[i].nestedPages);\n    }\n  }\n};\n\nconst getFocusPathOnRemove = (pagePath: PagePath[]) => {\n  const pageId: number = (pagePath.slice(-1)[0] as number);\n  if (pageId === 0) {\n    return pagePath.slice(0, -2);\n  }\n\n  return [...pagePath.slice(0, -1), pageId - 1];\n};\n\nconst updateIds = (nestedPages: IPage[]): void => {\n  for (let i = 0; i < nestedPages.length - 1; i += 1) {\n    // eslint-disable-next-line no-param-reassign\n    nestedPages[i].pageId = i;\n    // eslint-disable-next-line no-param-reassign\n    nestedPages[i].pagePath = [...nestedPages[i].pagePath.slice(-1), i];\n  }\n};\n\nfunction addNeighbor(body: any, params: { currentPage: IPage; list: IPage[], noteTitle: string }) {\n  const { list, currentPage, noteTitle } = params;\n  const { pagePath } = currentPage;\n  const newPageId: number = list.length;\n  const newNeighborPath: PagePath[] = [\n    ...pagePath.slice(0, -1),\n    newPageId,\n  ];\n  const newNeighbor: IPage = {\n    pageId: newPageId,\n    pageLink: '',\n    pagePath: newNeighborPath,\n    content: '',\n    nestedPages: [],\n    textInputHeight: TEXT_INPUT_HEIGHT,\n  };\n\n  let pageParentList: any = body;\n  for (let i = 0; i < pagePath.length - 1; i += 1) {\n    pageParentList = pageParentList[pagePath[i]];\n  }\n\n  // pageParentList.splice(currentPage.pageId + 1, 0, newNeighbor);\n  pageParentList.push(newNeighbor);\n  // for (let i = 0; i < pageParentList.length; i += 1) {\n  //   pageParentList[i] = {\n  //     ...pageParentList[i],\n  //     pageId: i,\n  //     content: `${i} Inner page content`,\n  //     pagePath: [...pageParentList[i].pagePath.slice(0, -1), i],\n  //   };\n  // }\n  return {\n    type: UPDATE_NOTE_BODY,\n    body: [...body],\n    title: noteTitle,\n    focusComponentPath: newNeighborPath,\n  };\n}\n\nfunction becomeChild(body: any, params: { currentPage: IPage, noteTitle: string }) {\n  const { currentPage, noteTitle } = params;\n  const { pagePath } = currentPage;\n  let pageParentList: any = body;\n  for (let i = 0; i < pagePath.length - 1; i += 1) {\n    pageParentList = pageParentList[pagePath[i]];\n  }\n\n  const newParentPageIndex: number = (pagePath.slice(-1)[0] as number) - 1;\n  const newParentPage: IPage = pageParentList[newParentPageIndex];\n\n  const newChildPageIndex: number = newParentPage.nestedPages.length;\n  const newChildPagePath: (string | number)[] = [\n    ...newParentPage.pagePath,\n    'nestedPages',\n    newChildPageIndex,\n  ];\n  const newChildPage: IPage = {\n    ...currentPage,\n    pageId: newChildPageIndex,\n    pagePath: newChildPagePath,\n  };\n\n  updateNestedPagesPath(newChildPage.pagePath, newChildPage.nestedPages);\n\n  newParentPage.nestedPages.push(newChildPage);\n  pageParentList.splice(currentPage.pageId, 1);\n\n  for (let i = 0; i < pageParentList.length; i += 1) {\n    pageParentList[i] = {\n      ...pageParentList[i],\n      pageId: i,\n      pagePath: [...pageParentList[i].pagePath.slice(0, -1), i],\n    };\n  }\n\n  console.log('becomeChild', body);\n  return {\n    type: UPDATE_NOTE_BODY,\n    body: [...body],\n    title: noteTitle,\n    focusComponentPath: newChildPagePath,\n  };\n}\n\nfunction removePage(body: any, params: { currentPage: IPage, noteTitle: string }) {\n  const { currentPage, noteTitle } = params;\n  const { pagePath } = currentPage;\n  let pageParentList: any = body;\n  for (let i = 0; i < pagePath.length - 1; i += 1) {\n    pageParentList = pageParentList[pagePath[i]];\n  }\n  pageParentList.splice(currentPage.pageId, 1);\n\n  for (let i = 0; i < pageParentList.length; i += 1) {\n    pageParentList[i] = {\n      ...pageParentList[i],\n      pageId: i,\n      pagePath: [...pageParentList[i].pagePath.slice(0, -1), i],\n    };\n  }\n\n  const newFocusComponentPath: (string | number)[] = getFocusPathOnRemove(pagePath);\n  return {\n    type: UPDATE_NOTE_BODY,\n    body: [...body],\n    title: noteTitle,\n    focusComponentPath: newFocusComponentPath,\n  };\n}\n\nfunction levelUp(body: any, params: { currentPage: IPage, noteTitle: string }) {\n  const { currentPage, noteTitle } = params;\n  const { pagePath } = currentPage;\n  let pageParentList: any = body;\n  for (let i = 0; i < pagePath.length - 1; i += 1) {\n    pageParentList = pageParentList[pagePath[i]];\n  }\n\n  let newPageParentList: any = body;\n  for (let i = 0; i < pagePath.length - 3; i += 1) {\n    newPageParentList = newPageParentList[pagePath[i]];\n  }\n\n  const newChildPageIndex: number = newPageParentList.length;\n  const newChildPagePath: (string | number)[] = [\n    ...currentPage.pagePath.slice(0, -3),\n    newChildPageIndex,\n  ];\n\n  const newChildPage: IPage = {\n    ...currentPage,\n    pageId: newChildPageIndex,\n    pagePath: newChildPagePath,\n  };\n\n  updateNestedPagesPath(newChildPage.pagePath, newChildPage.nestedPages);\n\n  newPageParentList.push(newChildPage);\n  pageParentList.splice(currentPage.pageId, 1);\n\n  for (let i = 0; i < pageParentList.length; i += 1) {\n    pageParentList[i] = {\n      ...pageParentList[i],\n      pageId: i,\n      pagePath: [...pageParentList[i].pagePath.slice(0, -1), i],\n    };\n  }\n  return {\n    type: UPDATE_NOTE_BODY,\n    body: [...body],\n    title: noteTitle,\n    focusComponentPath: newChildPagePath,\n  };\n}\n\nfunction addChild(body: any, params: { currentPage: IPage, noteTitle: string }) {\n  const { currentPage, noteTitle } = params;\n  const { pagePath } = currentPage;\n\n  const newPageId: number = 0;\n  const newChildPath: PagePath[] = [\n    ...pagePath,\n    'nestedPages',\n    newPageId,\n  ];\n  const newChild: IPage = {\n    pageId: newPageId,\n    pageLink: '',\n    pagePath: newChildPath,\n    content: '',\n    nestedPages: [],\n    textInputHeight: TEXT_INPUT_HEIGHT,\n  };\n\n  currentPage.nestedPages.push(newChild);\n\n  updateIds(currentPage.nestedPages);\n  updateNestedPagesPath(currentPage.pagePath, currentPage.nestedPages);\n\n  return {\n    type: UPDATE_NOTE_BODY,\n    body: [...body],\n    title: noteTitle,\n    focusComponentPath: newChildPath,\n  };\n}\n\nfunction changeFocusElement(\n  direction: string, body: any, params: { currentPage: IPage; list: IPage[], noteTitle: string },\n) {\n  const { currentPage, list, noteTitle } = params;\n  const { pagePath, pageId } = currentPage;\n\n  let newFocusPath: PagePath[];\n\n  if (direction === 'up') {\n    if (pageId > 0) {\n      newFocusPath = [...pagePath.slice(0, -1), pageId - 1];\n    } else {\n      newFocusPath = [...pagePath.slice(0, -2)];\n    }\n  } else if (pageId >= list.length - 1) {\n    newFocusPath = [...pagePath];\n  } else {\n    newFocusPath = [...pagePath.slice(0, -1), pageId + 1];\n  }\n\n  return {\n    type: CHANGE_FOCUS_ELEMENT,\n    title: noteTitle,\n    focusComponentPath: newFocusPath,\n  };\n}\n\nfunction updateContent(body: any, params: { noteTitle: string }) {\n  const { noteTitle } = params;\n  return {\n    type: UPDATE_NOTE_BODY,\n    title: noteTitle,\n    body: [...body],\n  };\n}\n\nfunction addNote(note: INote) {\n  return {\n    type: ADD_NOTE,\n    note,\n  };\n}\n\nconst userLoggedIn = (data: any) => {\n  localStorage.setItem('username', data.user.name);\n  localStorage.setItem('email', data.user.email);\n\n  return {\n    type: USER_LOGGED_IN,\n    userData: {\n      username: data.user.name,\n      email: data.user.email,\n    },\n  };\n};\n\nconst userLoggedOut = () => {\n  console.log('loogedout');\n  localStorage.removeItem('username');\n  localStorage.removeItem('email');\n  localStorage.removeItem('auth-token');\n  return {\n    type: USER_LOGGED_OUT,\n    isLoggedIn: false,\n  };\n};\n\nexport {\n  removePage,\n  addNeighbor,\n  becomeChild,\n  levelUp,\n  updateContent,\n  addChild,\n  changeFocusElement,\n  addNote,\n  userLoggedIn,\n  userLoggedOut,\n};\n","C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\sidebar\\ReDrawer.tsx",[],"C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\components\\sidebar\\MenuItemWithModal.tsx",[],"C:\\Users\\123\\WebstormProjects\\ebanina\\rsclone\\src\\store\\reducers\\reducer.ts",["93"],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":94,"column":3,"nodeType":"108","messageId":"109","endLine":94,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":99,"column":5,"nodeType":"108","messageId":"109","endLine":99,"endColumn":16},{"ruleId":"110","severity":2,"message":"111","line":11,"column":11,"nodeType":"112","messageId":"113","endLine":11,"endColumn":24},{"ruleId":"106","severity":1,"message":"107","line":8,"column":3,"nodeType":"108","messageId":"109","endLine":8,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":9,"column":3,"nodeType":"108","messageId":"109","endLine":9,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":10,"column":3,"nodeType":"108","messageId":"109","endLine":10,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":68,"column":7,"nodeType":"108","messageId":"109","endLine":68,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":81,"column":5,"nodeType":"108","messageId":"109","endLine":81,"endColumn":16},{"ruleId":"106","severity":1,"message":"107","line":106,"column":11,"nodeType":"108","messageId":"109","endLine":106,"endColumn":22},{"ruleId":"106","severity":1,"message":"107","line":29,"column":9,"nodeType":"108","messageId":"109","endLine":29,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":19,"column":3,"nodeType":"108","messageId":"109","endLine":19,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":23,"column":3,"nodeType":"108","messageId":"109","endLine":23,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":122,"column":3,"nodeType":"108","messageId":"109","endLine":122,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":291,"column":3,"nodeType":"108","messageId":"109","endLine":291,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":24,"column":7,"nodeType":"108","messageId":"109","endLine":24,"endColumn":18},"lines-around-directive",["114"],"no-spaced-func",["115"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","no-unused-vars","'IInitialState' is defined but never used.","Identifier","unusedVar","padding-line-between-statements","func-call-spacing"]